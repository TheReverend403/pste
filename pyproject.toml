[tool.poetry]
name = "pste"
version = "0.7.0"
description = "Just a simple file hosting application inspired by the likes of pomf.se and teknik.io."
authors = ["Lee Watson <me@lwatson.dev>"]
license = "GPL-3.0+"

[tool.poetry.dependencies]
python = "^3.12"
flask = "^3.0.0"
flask-login = "^0.6.3"
flask-sqlalchemy = "^3.1.1"
flask-migrate = "^4.0.5"
flask-wtf = "^1.0.0"
flask-assets = "^2.0"
libsass = "^0.23.0"
cssmin = "^0.2.0"
dynaconf = { version = "^3.2.4", extras = ["yaml"] }
passlib = { extras = ["argon2", "bcrypt"], version = "^1.7.0" }
python-magic = "^0.4.0"
humanize = "^4.9.0"
pygments = "^2.7.0"
sentry-sdk = { extras = ["flask"], version = "^1.0.0" }
psycopg2 = "^2.8.0"
gunicorn = { version = "^21.2.0", extras = ["gevent"] }
email_validator = "^1.0.5"
python-dotenv = "^1.0.1"
python-box = "^7.1.1"
Flask-Session = "^0.6.0"

[tool.poetry.group.dev.dependencies]
pre-commit = "^3.5.0"
Flask-DebugToolbar = "^0.14.0"
ruff = "^0.2.1"
pre-commit-hooks = "^4.5.0"

[tool.ruff]
target-version = "py312"
force-exclude = true
extend-exclude = [
    "data/",
]

[tool.ruff.lint]
select = [
    "A",
    "B",
    "BLE",
    "C90",
    "DTZ",
    "E",
    "ERA",
    "F",
    "FIX",
    # "FURB",
    "I",
    "N",
    "PL",
    "PTH",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "T20",
    "UP",
    "W",
    "YTT",
]

# ruff format compatibility
ignore = [
    "E501",
    "W191",
]

[tool.ruff.lint.extend-per-file-ignores]
"pste/migrations/*" = ["ERA001"]

[tool.ruff.format]
line-ending = "lf"

[build-system]
requires = ["poetry-core>=1.3.0"]
build-backend = "poetry.core.masonry.api"
